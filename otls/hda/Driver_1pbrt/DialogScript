# Dialog script for pbrt automatically generated

{
    name	pbrt
    script	pbrt
    label	PBRT

    help {
	""
    }

    inputlabel	1	"Sub-Network Input #1"
    inputlabel	2	"Sub-Network Input #2"
    inputlabel	3	"Sub-Network Input #3"
    inputlabel	4	"Sub-Network Input #4"
    inputlabel	5	"Sub-Network Input #5"
    inputlabel	6	"Sub-Network Input #6"
    inputlabel	7	"Sub-Network Input #7"
    inputlabel	8	"Sub-Network Input #8"
    inputlabel	9	"Sub-Network Input #9"
    inputlabel	10	"Sub-Network Input #10"
    inputlabel	11	"Sub-Network Input #11"
    inputlabel	12	"Sub-Network Input #12"
    inputlabel	13	"Sub-Network Input #13"
    inputlabel	14	"Sub-Network Input #14"
    inputlabel	15	"Sub-Network Input #15"
    inputlabel	16	"Sub-Network Input #16"
    inputlabel	17	"Sub-Network Input #17"
    inputlabel	18	"Sub-Network Input #18"
    inputlabel	19	"Sub-Network Input #19"
    inputlabel	20	"Sub-Network Input #20"
    inputlabel	21	"Sub-Network Input #21"
    inputlabel	22	"Sub-Network Input #22"
    inputlabel	23	"Sub-Network Input #23"
    inputlabel	24	"Sub-Network Input #24"
    inputlabel	25	"Sub-Network Input #25"
    inputlabel	26	"Sub-Network Input #26"
    inputlabel	27	"Sub-Network Input #27"
    inputlabel	28	"Sub-Network Input #28"
    inputlabel	29	"Sub-Network Input #29"
    inputlabel	30	"Sub-Network Input #30"
    inputlabel	31	"Sub-Network Input #31"
    inputlabel	32	"Sub-Network Input #32"
    inputlabel	33	"Sub-Network Input #33"
    inputlabel	34	"Sub-Network Input #34"
    inputlabel	35	"Sub-Network Input #35"
    inputlabel	36	"Sub-Network Input #36"
    inputlabel	37	"Sub-Network Input #37"
    inputlabel	38	"Sub-Network Input #38"
    inputlabel	39	"Sub-Network Input #39"
    inputlabel	40	"Sub-Network Input #40"
    inputlabel	41	"Sub-Network Input #41"
    inputlabel	42	"Sub-Network Input #42"
    inputlabel	43	"Sub-Network Input #43"
    inputlabel	44	"Sub-Network Input #44"
    inputlabel	45	"Sub-Network Input #45"
    inputlabel	46	"Sub-Network Input #46"
    inputlabel	47	"Sub-Network Input #47"
    inputlabel	48	"Sub-Network Input #48"
    inputlabel	49	"Sub-Network Input #49"
    inputlabel	50	"Sub-Network Input #50"
    inputlabel	51	"Sub-Network Input #51"
    inputlabel	52	"Sub-Network Input #52"
    inputlabel	53	"Sub-Network Input #53"
    inputlabel	54	"Sub-Network Input #54"
    inputlabel	55	"Sub-Network Input #55"
    inputlabel	56	"Sub-Network Input #56"
    inputlabel	57	"Sub-Network Input #57"
    inputlabel	58	"Sub-Network Input #58"
    inputlabel	59	"Sub-Network Input #59"
    inputlabel	60	"Sub-Network Input #60"
    inputlabel	61	"Sub-Network Input #61"
    inputlabel	62	"Sub-Network Input #62"
    inputlabel	63	"Sub-Network Input #63"
    inputlabel	64	"Sub-Network Input #64"
    inputlabel	65	"Sub-Network Input #65"
    inputlabel	66	"Sub-Network Input #66"
    inputlabel	67	"Sub-Network Input #67"
    inputlabel	68	"Sub-Network Input #68"
    inputlabel	69	"Sub-Network Input #69"
    inputlabel	70	"Sub-Network Input #70"
    inputlabel	71	"Sub-Network Input #71"
    inputlabel	72	"Sub-Network Input #72"
    inputlabel	73	"Sub-Network Input #73"
    inputlabel	74	"Sub-Network Input #74"
    inputlabel	75	"Sub-Network Input #75"
    inputlabel	76	"Sub-Network Input #76"
    inputlabel	77	"Sub-Network Input #77"
    inputlabel	78	"Sub-Network Input #78"
    inputlabel	79	"Sub-Network Input #79"
    inputlabel	80	"Sub-Network Input #80"
    inputlabel	81	"Sub-Network Input #81"
    inputlabel	82	"Sub-Network Input #82"
    inputlabel	83	"Sub-Network Input #83"
    inputlabel	84	"Sub-Network Input #84"
    inputlabel	85	"Sub-Network Input #85"
    inputlabel	86	"Sub-Network Input #86"
    inputlabel	87	"Sub-Network Input #87"
    inputlabel	88	"Sub-Network Input #88"
    inputlabel	89	"Sub-Network Input #89"
    inputlabel	90	"Sub-Network Input #90"
    inputlabel	91	"Sub-Network Input #91"
    inputlabel	92	"Sub-Network Input #92"
    inputlabel	93	"Sub-Network Input #93"
    inputlabel	94	"Sub-Network Input #94"
    inputlabel	95	"Sub-Network Input #95"
    inputlabel	96	"Sub-Network Input #96"
    inputlabel	97	"Sub-Network Input #97"
    inputlabel	98	"Sub-Network Input #98"
    inputlabel	99	"Sub-Network Input #99"
    inputlabel	100	"Sub-Network Input #100"
    inputlabel	101	"Sub-Network Input #101"
    inputlabel	102	"Sub-Network Input #102"
    inputlabel	103	"Sub-Network Input #103"
    inputlabel	104	"Sub-Network Input #104"
    inputlabel	105	"Sub-Network Input #105"
    inputlabel	106	"Sub-Network Input #106"
    inputlabel	107	"Sub-Network Input #107"
    inputlabel	108	"Sub-Network Input #108"
    inputlabel	109	"Sub-Network Input #109"
    inputlabel	110	"Sub-Network Input #110"
    inputlabel	111	"Sub-Network Input #111"
    inputlabel	112	"Sub-Network Input #112"
    inputlabel	113	"Sub-Network Input #113"
    inputlabel	114	"Sub-Network Input #114"
    inputlabel	115	"Sub-Network Input #115"
    inputlabel	116	"Sub-Network Input #116"
    inputlabel	117	"Sub-Network Input #117"
    inputlabel	118	"Sub-Network Input #118"
    inputlabel	119	"Sub-Network Input #119"
    inputlabel	120	"Sub-Network Input #120"
    inputlabel	121	"Sub-Network Input #121"
    inputlabel	122	"Sub-Network Input #122"
    inputlabel	123	"Sub-Network Input #123"
    inputlabel	124	"Sub-Network Input #124"
    inputlabel	125	"Sub-Network Input #125"
    inputlabel	126	"Sub-Network Input #126"
    inputlabel	127	"Sub-Network Input #127"
    inputlabel	128	"Sub-Network Input #128"
    inputlabel	129	"Sub-Network Input #129"
    inputlabel	130	"Sub-Network Input #130"
    inputlabel	131	"Sub-Network Input #131"
    inputlabel	132	"Sub-Network Input #132"
    inputlabel	133	"Sub-Network Input #133"
    inputlabel	134	"Sub-Network Input #134"
    inputlabel	135	"Sub-Network Input #135"
    inputlabel	136	"Sub-Network Input #136"
    inputlabel	137	"Sub-Network Input #137"
    inputlabel	138	"Sub-Network Input #138"
    inputlabel	139	"Sub-Network Input #139"
    inputlabel	140	"Sub-Network Input #140"
    inputlabel	141	"Sub-Network Input #141"
    inputlabel	142	"Sub-Network Input #142"
    inputlabel	143	"Sub-Network Input #143"
    inputlabel	144	"Sub-Network Input #144"
    inputlabel	145	"Sub-Network Input #145"
    inputlabel	146	"Sub-Network Input #146"
    inputlabel	147	"Sub-Network Input #147"
    inputlabel	148	"Sub-Network Input #148"
    inputlabel	149	"Sub-Network Input #149"
    inputlabel	150	"Sub-Network Input #150"
    inputlabel	151	"Sub-Network Input #151"
    inputlabel	152	"Sub-Network Input #152"
    inputlabel	153	"Sub-Network Input #153"
    inputlabel	154	"Sub-Network Input #154"
    inputlabel	155	"Sub-Network Input #155"
    inputlabel	156	"Sub-Network Input #156"
    inputlabel	157	"Sub-Network Input #157"
    inputlabel	158	"Sub-Network Input #158"
    inputlabel	159	"Sub-Network Input #159"
    inputlabel	160	"Sub-Network Input #160"
    inputlabel	161	"Sub-Network Input #161"
    inputlabel	162	"Sub-Network Input #162"
    inputlabel	163	"Sub-Network Input #163"
    inputlabel	164	"Sub-Network Input #164"
    inputlabel	165	"Sub-Network Input #165"
    inputlabel	166	"Sub-Network Input #166"
    inputlabel	167	"Sub-Network Input #167"
    inputlabel	168	"Sub-Network Input #168"
    inputlabel	169	"Sub-Network Input #169"
    inputlabel	170	"Sub-Network Input #170"
    inputlabel	171	"Sub-Network Input #171"
    inputlabel	172	"Sub-Network Input #172"
    inputlabel	173	"Sub-Network Input #173"
    inputlabel	174	"Sub-Network Input #174"
    inputlabel	175	"Sub-Network Input #175"
    inputlabel	176	"Sub-Network Input #176"
    inputlabel	177	"Sub-Network Input #177"
    inputlabel	178	"Sub-Network Input #178"
    inputlabel	179	"Sub-Network Input #179"
    inputlabel	180	"Sub-Network Input #180"
    inputlabel	181	"Sub-Network Input #181"
    inputlabel	182	"Sub-Network Input #182"
    inputlabel	183	"Sub-Network Input #183"
    inputlabel	184	"Sub-Network Input #184"
    inputlabel	185	"Sub-Network Input #185"
    inputlabel	186	"Sub-Network Input #186"
    inputlabel	187	"Sub-Network Input #187"
    inputlabel	188	"Sub-Network Input #188"
    inputlabel	189	"Sub-Network Input #189"
    inputlabel	190	"Sub-Network Input #190"
    inputlabel	191	"Sub-Network Input #191"
    inputlabel	192	"Sub-Network Input #192"
    inputlabel	193	"Sub-Network Input #193"
    inputlabel	194	"Sub-Network Input #194"
    inputlabel	195	"Sub-Network Input #195"
    inputlabel	196	"Sub-Network Input #196"
    inputlabel	197	"Sub-Network Input #197"
    inputlabel	198	"Sub-Network Input #198"
    inputlabel	199	"Sub-Network Input #199"
    inputlabel	200	"Sub-Network Input #200"
    inputlabel	201	"Sub-Network Input #201"
    inputlabel	202	"Sub-Network Input #202"
    inputlabel	203	"Sub-Network Input #203"
    inputlabel	204	"Sub-Network Input #204"
    inputlabel	205	"Sub-Network Input #205"
    inputlabel	206	"Sub-Network Input #206"
    inputlabel	207	"Sub-Network Input #207"
    inputlabel	208	"Sub-Network Input #208"
    inputlabel	209	"Sub-Network Input #209"
    inputlabel	210	"Sub-Network Input #210"
    inputlabel	211	"Sub-Network Input #211"
    inputlabel	212	"Sub-Network Input #212"
    inputlabel	213	"Sub-Network Input #213"
    inputlabel	214	"Sub-Network Input #214"
    inputlabel	215	"Sub-Network Input #215"
    inputlabel	216	"Sub-Network Input #216"
    inputlabel	217	"Sub-Network Input #217"
    inputlabel	218	"Sub-Network Input #218"
    inputlabel	219	"Sub-Network Input #219"
    inputlabel	220	"Sub-Network Input #220"
    inputlabel	221	"Sub-Network Input #221"
    inputlabel	222	"Sub-Network Input #222"
    inputlabel	223	"Sub-Network Input #223"
    inputlabel	224	"Sub-Network Input #224"
    inputlabel	225	"Sub-Network Input #225"
    inputlabel	226	"Sub-Network Input #226"
    inputlabel	227	"Sub-Network Input #227"
    inputlabel	228	"Sub-Network Input #228"
    inputlabel	229	"Sub-Network Input #229"
    inputlabel	230	"Sub-Network Input #230"
    inputlabel	231	"Sub-Network Input #231"
    inputlabel	232	"Sub-Network Input #232"
    inputlabel	233	"Sub-Network Input #233"
    inputlabel	234	"Sub-Network Input #234"
    inputlabel	235	"Sub-Network Input #235"
    inputlabel	236	"Sub-Network Input #236"
    inputlabel	237	"Sub-Network Input #237"
    inputlabel	238	"Sub-Network Input #238"
    inputlabel	239	"Sub-Network Input #239"
    inputlabel	240	"Sub-Network Input #240"
    inputlabel	241	"Sub-Network Input #241"
    inputlabel	242	"Sub-Network Input #242"
    inputlabel	243	"Sub-Network Input #243"
    inputlabel	244	"Sub-Network Input #244"
    inputlabel	245	"Sub-Network Input #245"
    inputlabel	246	"Sub-Network Input #246"
    inputlabel	247	"Sub-Network Input #247"
    inputlabel	248	"Sub-Network Input #248"
    inputlabel	249	"Sub-Network Input #249"
    inputlabel	250	"Sub-Network Input #250"
    inputlabel	251	"Sub-Network Input #251"
    inputlabel	252	"Sub-Network Input #252"
    inputlabel	253	"Sub-Network Input #253"
    inputlabel	254	"Sub-Network Input #254"
    inputlabel	255	"Sub-Network Input #255"
    inputlabel	256	"Sub-Network Input #256"
    inputlabel	257	"Sub-Network Input #257"
    inputlabel	258	"Sub-Network Input #258"
    inputlabel	259	"Sub-Network Input #259"
    inputlabel	260	"Sub-Network Input #260"
    inputlabel	261	"Sub-Network Input #261"
    inputlabel	262	"Sub-Network Input #262"
    inputlabel	263	"Sub-Network Input #263"
    inputlabel	264	"Sub-Network Input #264"
    inputlabel	265	"Sub-Network Input #265"
    inputlabel	266	"Sub-Network Input #266"
    inputlabel	267	"Sub-Network Input #267"
    inputlabel	268	"Sub-Network Input #268"
    inputlabel	269	"Sub-Network Input #269"
    inputlabel	270	"Sub-Network Input #270"
    inputlabel	271	"Sub-Network Input #271"
    inputlabel	272	"Sub-Network Input #272"
    inputlabel	273	"Sub-Network Input #273"
    inputlabel	274	"Sub-Network Input #274"
    inputlabel	275	"Sub-Network Input #275"
    inputlabel	276	"Sub-Network Input #276"
    inputlabel	277	"Sub-Network Input #277"
    inputlabel	278	"Sub-Network Input #278"
    inputlabel	279	"Sub-Network Input #279"
    inputlabel	280	"Sub-Network Input #280"
    inputlabel	281	"Sub-Network Input #281"
    inputlabel	282	"Sub-Network Input #282"
    inputlabel	283	"Sub-Network Input #283"
    inputlabel	284	"Sub-Network Input #284"
    inputlabel	285	"Sub-Network Input #285"
    inputlabel	286	"Sub-Network Input #286"
    inputlabel	287	"Sub-Network Input #287"
    inputlabel	288	"Sub-Network Input #288"
    inputlabel	289	"Sub-Network Input #289"
    inputlabel	290	"Sub-Network Input #290"
    inputlabel	291	"Sub-Network Input #291"
    inputlabel	292	"Sub-Network Input #292"
    inputlabel	293	"Sub-Network Input #293"
    inputlabel	294	"Sub-Network Input #294"
    inputlabel	295	"Sub-Network Input #295"
    inputlabel	296	"Sub-Network Input #296"
    inputlabel	297	"Sub-Network Input #297"
    inputlabel	298	"Sub-Network Input #298"
    inputlabel	299	"Sub-Network Input #299"
    inputlabel	300	"Sub-Network Input #300"
    inputlabel	301	"Sub-Network Input #301"
    inputlabel	302	"Sub-Network Input #302"
    inputlabel	303	"Sub-Network Input #303"
    inputlabel	304	"Sub-Network Input #304"
    inputlabel	305	"Sub-Network Input #305"
    inputlabel	306	"Sub-Network Input #306"
    inputlabel	307	"Sub-Network Input #307"
    inputlabel	308	"Sub-Network Input #308"
    inputlabel	309	"Sub-Network Input #309"
    inputlabel	310	"Sub-Network Input #310"
    inputlabel	311	"Sub-Network Input #311"
    inputlabel	312	"Sub-Network Input #312"
    inputlabel	313	"Sub-Network Input #313"
    inputlabel	314	"Sub-Network Input #314"
    inputlabel	315	"Sub-Network Input #315"
    inputlabel	316	"Sub-Network Input #316"
    inputlabel	317	"Sub-Network Input #317"
    inputlabel	318	"Sub-Network Input #318"
    inputlabel	319	"Sub-Network Input #319"
    inputlabel	320	"Sub-Network Input #320"
    inputlabel	321	"Sub-Network Input #321"
    inputlabel	322	"Sub-Network Input #322"
    inputlabel	323	"Sub-Network Input #323"
    inputlabel	324	"Sub-Network Input #324"
    inputlabel	325	"Sub-Network Input #325"
    inputlabel	326	"Sub-Network Input #326"
    inputlabel	327	"Sub-Network Input #327"
    inputlabel	328	"Sub-Network Input #328"
    inputlabel	329	"Sub-Network Input #329"
    inputlabel	330	"Sub-Network Input #330"
    inputlabel	331	"Sub-Network Input #331"
    inputlabel	332	"Sub-Network Input #332"
    inputlabel	333	"Sub-Network Input #333"
    inputlabel	334	"Sub-Network Input #334"
    inputlabel	335	"Sub-Network Input #335"
    inputlabel	336	"Sub-Network Input #336"
    inputlabel	337	"Sub-Network Input #337"
    inputlabel	338	"Sub-Network Input #338"
    inputlabel	339	"Sub-Network Input #339"
    inputlabel	340	"Sub-Network Input #340"
    inputlabel	341	"Sub-Network Input #341"
    inputlabel	342	"Sub-Network Input #342"
    inputlabel	343	"Sub-Network Input #343"
    inputlabel	344	"Sub-Network Input #344"
    inputlabel	345	"Sub-Network Input #345"
    inputlabel	346	"Sub-Network Input #346"
    inputlabel	347	"Sub-Network Input #347"
    inputlabel	348	"Sub-Network Input #348"
    inputlabel	349	"Sub-Network Input #349"
    inputlabel	350	"Sub-Network Input #350"
    inputlabel	351	"Sub-Network Input #351"
    inputlabel	352	"Sub-Network Input #352"
    inputlabel	353	"Sub-Network Input #353"
    inputlabel	354	"Sub-Network Input #354"
    inputlabel	355	"Sub-Network Input #355"
    inputlabel	356	"Sub-Network Input #356"
    inputlabel	357	"Sub-Network Input #357"
    inputlabel	358	"Sub-Network Input #358"
    inputlabel	359	"Sub-Network Input #359"
    inputlabel	360	"Sub-Network Input #360"
    inputlabel	361	"Sub-Network Input #361"
    inputlabel	362	"Sub-Network Input #362"
    inputlabel	363	"Sub-Network Input #363"
    inputlabel	364	"Sub-Network Input #364"
    inputlabel	365	"Sub-Network Input #365"
    inputlabel	366	"Sub-Network Input #366"
    inputlabel	367	"Sub-Network Input #367"
    inputlabel	368	"Sub-Network Input #368"
    inputlabel	369	"Sub-Network Input #369"
    inputlabel	370	"Sub-Network Input #370"
    inputlabel	371	"Sub-Network Input #371"
    inputlabel	372	"Sub-Network Input #372"
    inputlabel	373	"Sub-Network Input #373"
    inputlabel	374	"Sub-Network Input #374"
    inputlabel	375	"Sub-Network Input #375"
    inputlabel	376	"Sub-Network Input #376"
    inputlabel	377	"Sub-Network Input #377"
    inputlabel	378	"Sub-Network Input #378"
    inputlabel	379	"Sub-Network Input #379"
    inputlabel	380	"Sub-Network Input #380"
    inputlabel	381	"Sub-Network Input #381"
    inputlabel	382	"Sub-Network Input #382"
    inputlabel	383	"Sub-Network Input #383"
    inputlabel	384	"Sub-Network Input #384"
    inputlabel	385	"Sub-Network Input #385"
    inputlabel	386	"Sub-Network Input #386"
    inputlabel	387	"Sub-Network Input #387"
    inputlabel	388	"Sub-Network Input #388"
    inputlabel	389	"Sub-Network Input #389"
    inputlabel	390	"Sub-Network Input #390"
    inputlabel	391	"Sub-Network Input #391"
    inputlabel	392	"Sub-Network Input #392"
    inputlabel	393	"Sub-Network Input #393"
    inputlabel	394	"Sub-Network Input #394"
    inputlabel	395	"Sub-Network Input #395"
    inputlabel	396	"Sub-Network Input #396"
    inputlabel	397	"Sub-Network Input #397"
    inputlabel	398	"Sub-Network Input #398"
    inputlabel	399	"Sub-Network Input #399"
    inputlabel	400	"Sub-Network Input #400"
    inputlabel	401	"Sub-Network Input #401"
    inputlabel	402	"Sub-Network Input #402"
    inputlabel	403	"Sub-Network Input #403"
    inputlabel	404	"Sub-Network Input #404"
    inputlabel	405	"Sub-Network Input #405"
    inputlabel	406	"Sub-Network Input #406"
    inputlabel	407	"Sub-Network Input #407"
    inputlabel	408	"Sub-Network Input #408"
    inputlabel	409	"Sub-Network Input #409"
    inputlabel	410	"Sub-Network Input #410"
    inputlabel	411	"Sub-Network Input #411"
    inputlabel	412	"Sub-Network Input #412"
    inputlabel	413	"Sub-Network Input #413"
    inputlabel	414	"Sub-Network Input #414"
    inputlabel	415	"Sub-Network Input #415"
    inputlabel	416	"Sub-Network Input #416"
    inputlabel	417	"Sub-Network Input #417"
    inputlabel	418	"Sub-Network Input #418"
    inputlabel	419	"Sub-Network Input #419"
    inputlabel	420	"Sub-Network Input #420"
    inputlabel	421	"Sub-Network Input #421"
    inputlabel	422	"Sub-Network Input #422"
    inputlabel	423	"Sub-Network Input #423"
    inputlabel	424	"Sub-Network Input #424"
    inputlabel	425	"Sub-Network Input #425"
    inputlabel	426	"Sub-Network Input #426"
    inputlabel	427	"Sub-Network Input #427"
    inputlabel	428	"Sub-Network Input #428"
    inputlabel	429	"Sub-Network Input #429"
    inputlabel	430	"Sub-Network Input #430"
    inputlabel	431	"Sub-Network Input #431"
    inputlabel	432	"Sub-Network Input #432"
    inputlabel	433	"Sub-Network Input #433"
    inputlabel	434	"Sub-Network Input #434"
    inputlabel	435	"Sub-Network Input #435"
    inputlabel	436	"Sub-Network Input #436"
    inputlabel	437	"Sub-Network Input #437"
    inputlabel	438	"Sub-Network Input #438"
    inputlabel	439	"Sub-Network Input #439"
    inputlabel	440	"Sub-Network Input #440"
    inputlabel	441	"Sub-Network Input #441"
    inputlabel	442	"Sub-Network Input #442"
    inputlabel	443	"Sub-Network Input #443"
    inputlabel	444	"Sub-Network Input #444"
    inputlabel	445	"Sub-Network Input #445"
    inputlabel	446	"Sub-Network Input #446"
    inputlabel	447	"Sub-Network Input #447"
    inputlabel	448	"Sub-Network Input #448"
    inputlabel	449	"Sub-Network Input #449"
    inputlabel	450	"Sub-Network Input #450"
    inputlabel	451	"Sub-Network Input #451"
    inputlabel	452	"Sub-Network Input #452"
    inputlabel	453	"Sub-Network Input #453"
    inputlabel	454	"Sub-Network Input #454"
    inputlabel	455	"Sub-Network Input #455"
    inputlabel	456	"Sub-Network Input #456"
    inputlabel	457	"Sub-Network Input #457"
    inputlabel	458	"Sub-Network Input #458"
    inputlabel	459	"Sub-Network Input #459"
    inputlabel	460	"Sub-Network Input #460"
    inputlabel	461	"Sub-Network Input #461"
    inputlabel	462	"Sub-Network Input #462"
    inputlabel	463	"Sub-Network Input #463"
    inputlabel	464	"Sub-Network Input #464"
    inputlabel	465	"Sub-Network Input #465"
    inputlabel	466	"Sub-Network Input #466"
    inputlabel	467	"Sub-Network Input #467"
    inputlabel	468	"Sub-Network Input #468"
    inputlabel	469	"Sub-Network Input #469"
    inputlabel	470	"Sub-Network Input #470"
    inputlabel	471	"Sub-Network Input #471"
    inputlabel	472	"Sub-Network Input #472"
    inputlabel	473	"Sub-Network Input #473"
    inputlabel	474	"Sub-Network Input #474"
    inputlabel	475	"Sub-Network Input #475"
    inputlabel	476	"Sub-Network Input #476"
    inputlabel	477	"Sub-Network Input #477"
    inputlabel	478	"Sub-Network Input #478"
    inputlabel	479	"Sub-Network Input #479"
    inputlabel	480	"Sub-Network Input #480"
    inputlabel	481	"Sub-Network Input #481"
    inputlabel	482	"Sub-Network Input #482"
    inputlabel	483	"Sub-Network Input #483"
    inputlabel	484	"Sub-Network Input #484"
    inputlabel	485	"Sub-Network Input #485"
    inputlabel	486	"Sub-Network Input #486"
    inputlabel	487	"Sub-Network Input #487"
    inputlabel	488	"Sub-Network Input #488"
    inputlabel	489	"Sub-Network Input #489"
    inputlabel	490	"Sub-Network Input #490"
    inputlabel	491	"Sub-Network Input #491"
    inputlabel	492	"Sub-Network Input #492"
    inputlabel	493	"Sub-Network Input #493"
    inputlabel	494	"Sub-Network Input #494"
    inputlabel	495	"Sub-Network Input #495"
    inputlabel	496	"Sub-Network Input #496"
    inputlabel	497	"Sub-Network Input #497"
    inputlabel	498	"Sub-Network Input #498"
    inputlabel	499	"Sub-Network Input #499"
    inputlabel	500	"Sub-Network Input #500"

    parm {
        name    "execute"
        baseparm
        label   "Render to Disk"
        joinnext
        export  none
    }
    parm {
        name    "renderdialog"
        baseparm
        label   "Controls..."
        nolabel
        export  none
    }
    parm {
        name    "trange"
        baseparm
        label   "Valid Frame Range"
        export  none
    }
    parm {
        name    "f"
        baseparm
        label   "Start/End/Inc"
        export  none
    }
    parm {
        name    "take"
        baseparm
        label   "Render With Take"
        export  none
    }
    parm {
        name    "camera"
        label   "Camera"
        type    oppath
        default { "/obj/cam1" }
        parmtag { "opfilter" "!!OBJ/CAMERA!!" }
        parmtag { "oprelative" "." }
    }
    group {
        name    "folder0"
        label   "Rendering"

        groupcollapsible {
            name    "nodes"
            label   "Node Overrides"

            parm {
                name    "film_node"
                label   "Film Node"
                type    oppath
                default { "" }
                parmtag { "opfilter" "!!VOP!!" }
                parmtag { "oprelative" "." }
            }
            parm {
                name    "filter_node"
                label   "Filter Node"
                type    oppath
                default { "" }
                parmtag { "opfilter" "!!VOP!!" }
                parmtag { "oprelative" "." }
            }
            parm {
                name    "sampler_node"
                label   "Sampler Node"
                type    oppath
                default { "" }
                parmtag { "opfilter" "!!VOP!!" }
                parmtag { "oprelative" "." }
            }
            parm {
                name    "integrator_node"
                label   "Intergrator Node"
                type    oppath
                default { "" }
                parmtag { "opfilter" "!!VOP!!" }
                parmtag { "oprelative" "." }
            }
            parm {
                name    "accelerator_node"
                label   "Accelerator Node"
                type    oppath
                default { "" }
                parmtag { "opfilter" "!!VOP!!" }
                parmtag { "oprelative" "." }
            }
            parm {
                name    "camera_node"
                label   "Camera Node"
                type    oppath
                default { "" }
                parmtag { "opfilter" "!!VOP!!" }
                parmtag { "oprelative" "." }
            }
        }

        parm {
            name    "pbrt_dof"
            label   "Allow Depth of Field"
            type    toggle
            default { "0" }
            help    "None"
            disablewhen "{ camera_node != \"\" }"
            parmtag { "spare_category" "Camera" }
        }
        parm {
            name    "allowmotionblur"
            label   "Allow Motion Blur"
            type    toggle
            default { "0" }
            help    "None"
            parmtag { "spare_category" "Motion Blur" }
        }
        parm {
            name    "shutteroffset"
            label   "Shutter Offset"
            type    float
            default { "1" }
            help    "Shifts the shutter center opening. 0 is motion blur around the current frame; -1 samples the motion blur from shutter time prior to current frame, up to the current frame; and 1 samples the motion blur for the shutter time starting from the current frame."
            disablewhen "{ allowmotionblur == 0 }"
            hidewhen "{ allowmotionblur == 0 }"
            range   { -1 1 }
            parmtag { "spare_category" "Motion Blur" }
        }
        groupsimple {
            name    "film_group"
            label   "Film"
            disablewhentab "{ film_node != \"\" }"

            parm {
                name    "filename"
                label   "Filename"
                type    image
                default { "pbrt.exr" }
                help    "The output filename. "
                parmtag { "filechooser_mode" "write" }
            }
            parm {
                name    "maxsampleluminance"
                label   "Max Sample Luniance"
                type    float
                default { "1e+38" }
                help    "Image sample values with luminance greater than this value are clamped to have this luminance. (This is a hack, but can be useful for eliminating large variance spikes in scenes with difficult light transport.) "
                range   { 0 10 }
            }
            parm {
                name    "diagonal"
                label   "Diagonal"
                type    float
                default { "35" }
                help    " Diagonal length of the film, in mm. (This value is only used when the RealisticCamera is used.)"
                range   { 0 10 }
                parmtag { "autoscope" "0000000000000000" }
            }
        }

        groupsimple {
            name    "filter_group"
            label   "Filter"
            disablewhentab "{ filter_node != \"\" }"

            parm {
                name    "filter"
                label   "Pixel Filter"
                type    ordinal
                default { "gaussian" }
                menu {
                    "box"       "Box"
                    "gaussian"  "Gaussian"
                    "mitchell"  "Mitchell"
                    "sinc"      "Sinc"
                    "triangle"  "Triangle"
                }
            }
            parm {
                name    "filter_width"
                label   "Filter Width"
                type    vector2
                size    2
                default { "2" "2" }
                range   { -1 1 }
            }
            parm {
                name    "gauss_alpha"
                label   "Alpha"
                type    float
                default { "2" }
                help    "alpha controls the falloff rate of the Gaussian filter. Smaller values give a blurrier image. "
                hidewhen "{ filter != gaussian }"
                range   { 0 10 }
            }
            parm {
                name    "mitchell_B"
                label   "B"
                type    float
                default { "0.333333" }
                hidewhen "{ filter != mitchell }"
                range   { 0 1 }
            }
            parm {
                name    "mitchell_C"
                label   "C"
                type    float
                default { "0.333333" }
                hidewhen "{ filter != mitchell }"
                range   { 0 1 }
            }
            parm {
                name    "sinc_tau"
                label   "Tau"
                type    float
                default { "3" }
                hidewhen "{ filter != sinc }"
                range   { 0 10 }
            }
        }

        groupsimple {
            name    "sampler_group"
            label   "Sampler"
            disablewhentab "{ sampler_node != \"\" }"

            parm {
                name    "sampler"
                label   "Sampler"
                type    ordinal
                default { "halton" }
                menu {
                    "02sequence"    "Zero Two Sequence"
                    "halton"        "Halton"
                    "maxmindist"    "Max/Min Dist"
                    "random"        "Random"
                    "sobol"         "Sobol"
                    "stratified"    "Stratified"
                }
            }
            parm {
                name    "pixelsamples"
                label   "Pixel Samples"
                type    integer
                default { "16" }
                help    " The number of samples to take, per pixel. Note that the number of samples is taken per pixel on average; depending on the actual sampling algorithm being used, individual pixel areas may have slightly more or slightly fewer."
                hidewhen "{ sampler == stratified }"
                range   { 0 10 }
            }
            parm {
                name    "jitter"
                label   "Jitter"
                type    toggle
                default { "1" }
                hidewhen "{ sampler != stratified }"
            }
            parm {
                name    "samples"
                label   "Samples"
                type    intvector2
                size    2
                default { "4" "4" }
                hidewhen "{ sampler != stratified }"
                range   { 1! 32 }
            }
            parm {
                name    "dimensions"
                label   "Dimensions"
                type    integer
                default { "4" }
                hidewhen "{ sampler != stratified }"
                range   { 1! 16 }
            }
        }

        groupsimple {
            name    "integrator_group"
            label   "Integrator"
            disablewhentab "{ integrator_node != \"\" }"

            parm {
                name    "integrator"
                label   "Integrator"
                type    ordinal
                default { "path" }
                menu {
                    "path"              "Pathtracer"
                    "bdpt"              "Bi-Directional Pathtarcer"
                    "mlt"               "Metropolis Light Transport"
                    "sppm"              "Stochastic Progressive Photon Mapping"
                    "whitted"           "Whitted Raytracing"
                    "volpath"           "Volume Pathtracer"
                    "directlighting"    "Direct Lighting"
                    "ao"                "Ambient Occlusion"
                }
            }
            parm {
                name    "maxdepth"
                label   "Max Depth"
                type    integer
                default { "5" }
                help    "Maximum length of a light-carrying path sampled by the integrator."
                hidewhen "{ integrator == ao }"
                range   { 0 10 }
                parmtag { "autoscope" "0000000000000000" }
            }
            parm {
                name    "rrthreshold"
                label   "R.R. Threshold"
                type    float
                default { "1" }
                help    "Determines when Russian roulette is applied to paths: when the maximum spectral component of the path contribution falls beneath this value, Russian roulette starts to be used."
                hidewhen "{ integrator == ao } { integrator == whitted } { integrator == directlighting } { integrator == sppm } { integrator == mlt }"
                range   { 0 10 }
                parmtag { "autoscope" "0000000000000000" }
            }
            parm {
                name    "lightsamplestrategy"
                label   "Light Sample Strategy"
                type    ordinal
                default { "spatial" }
                help    "Technique used for sampling light sources. Options include \"uniform\", which samples all light sources uniformly, \"power\", which samples light sources according to their emitted power, and \"spatial\", which computes light contributions in regions of the scene and samples from a related distribution."
                hidewhen "{ integrator == ao } { integrator == whitted } { integrator == directlighting } { integrator == sppm } { integrator == mlt }"
                menu {
                    "uniform"   "Uniform"
                    "power"     "Power"
                    "spatial"   "Spatial"
                }
                parmtag { "autoscope" "0000000000000000" }
            }
            parm {
                name    "visualizestrategies"
                label   "Visualize Strategies"
                type    toggle
                default { "off" }
                help    "If true, an image is saved for each (s,t) bidirectional path generation strategy used by the integrator. These images can be helpful for understanding which sampling strategies are effective for sampling various types of light transport paths."
                hidewhen "{ integrator != bdpt }"
                parmtag { "autoscope" "0000000000000000" }
            }
            parm {
                name    "visualizeweights"
                label   "Visualize Weights"
                type    toggle
                default { "off" }
                help    "If true, an image is saved with the multiple importance sampling weights for each (s,t) bidirectional path generation strategy. These images can be helpful for understanding which sampling strategies are effective for sampling various types of light transport paths."
                hidewhen "{ integrator != bdpt }"
                parmtag { "autoscope" "0000000000000000" }
            }
            parm {
                name    "iterations"
                label   "Iterations"
                type    integer
                default { "64" }
                help    "Total number of iterations of photon shooting from light sources. (After each iteration, photon statistics are updated.) "
                hidewhen "{ integrator != sppm }"
                range   { 0 10 }
                parmtag { "autoscope" "0000000000000000" }
            }
            parm {
                name    "photonsperiteration"
                label   "Photons Per Iteration"
                type    integer
                default { "-1" }
                help    "Number of photons to shoot from light sources in each iteration. With the default value, -1, the number is automatically set to be equal to the number of pixels in the image."
                hidewhen "{ integrator != sppm }"
                range   { 0 10 }
                parmtag { "autoscope" "0000000000000000" }
            }
            parm {
                name    "imagewritefrequency"
                label   "Image Write Frequency"
                type    integer
                default { "2.14748e+09" }
                help    "Frequency at which to write out the current image, in photon shooting iterations. (The default value means that the image will effectively only be written once when rendering has finished.)"
                hidewhen "{ integrator != sppm }"
                range   { 0 10 }
                parmtag { "autoscope" "0000000000000000" }
            }
            parm {
                name    "radius"
                label   "Radius"
                type    float
                default { "1" }
                help    "Initial photon search radius. (This value will be reduced as photons are accumulated at each pixel.) "
                hidewhen "{ integrator != sppm }"
                range   { 0 10 }
                parmtag { "autoscope" "0000000000000000" }
            }
            parm {
                name    "bootstrapsamples"
                label   "Bootstrap Samples"
                type    integer
                default { "100000" }
                help    "Number of samples to take during the \"bootstrap\" phase; some of these samples are used for initial light-carrying paths for the Metropolis algorithm. "
                hidewhen "{ integrator != mlt }"
                range   { 0 10 }
                parmtag { "autoscope" "0000000000000000" }
            }
            parm {
                name    "chains"
                label   "Chains"
                type    integer
                default { "1000" }
                help    "Number of unique Markov chains chains to follow with the Metropolis algorithm. (Each chain starts with a new path from the bootstrap phase.) "
                hidewhen "{ integrator != mlt }"
                range   { 0 10 }
                parmtag { "autoscope" "0000000000000000" }
            }
            parm {
                name    "mutationsperpixel"
                label   "Mutations Per Pixel"
                type    integer
                default { "100" }
                help    "Number of path mutations to apply per pixel in the image. (Note that each pixel will generally receive more or fewer path contributions, depending on how bright the pixel is. For the most part, this is the most effective parameter to increase to improve image quality. "
                hidewhen "{ integrator != mlt }"
                range   { 0 10 }
                parmtag { "autoscope" "0000000000000000" }
            }
            parm {
                name    "largestepprobability"
                label   "Large Step Probability"
                type    float
                default { "0.3" }
                help    "Probability of discarding the current path and generating a new random path (versus applying a small mutation to the current path). For scenes with very difficult-to-sample light transport paths, reducing this probability may be worthwhile."
                hidewhen "{ integrator != mlt }"
                range   { 0 10 }
                parmtag { "autoscope" "0000000000000000" }
            }
            parm {
                name    "sigma"
                label   "Sigma"
                type    float
                default { "0.01" }
                help    "Standard deviation of the perturbation applied to random samples in [0,1] used for small path mutations."
                hidewhen "{ integrator != mlt }"
                range   { 0 10 }
                parmtag { "autoscope" "0000000000000000" }
            }
            parm {
                name    "strategy"
                label   "Sample Strategy"
                type    ordinal
                default { "all" }
                help    "The strategy to use for sampling direct lighting. Valid options are \"all\", which samples all the lights uniformly and averages their contributions, and \"one\", which chooses a single light uniformly at random."
                hidewhen "{ integrator != directlighting }"
                menu {
                    "one"   "One Light"
                    "all"   "All Lights"
                }
                parmtag { "autoscope" "0000000000000000" }
            }
            parm {
                name    "nsamples"
                label   "Number Samples"
                type    integer
                default { "64" }
                help    "Number of occlusion samples"
                hidewhen "{ integrator != ao }"
                range   { 1 256 }
                parmtag { "autoscope" "0000000000000000" }
            }
            parm {
                name    "cossample"
                label   "Cosine Sample"
                type    toggle
                default { "on" }
                help    "Sample using a cosine distribution."
                hidewhen "{ integrator != ao }"
                range   { -1 1 }
                parmtag { "autoscope" "0000000000000000" }
            }
        }

        groupsimple {
            name    "accelerator_group"
            label   "Accelerator"
            disablewhentab "{ accelerator_node != \"\" }"

            parm {
                name    "accelerator"
                label   "Accelerator"
                type    ordinal
                default { "bvh" }
                menu {
                    "bvh"       "BVH"
                    "kdtree"    "KD-Tree"
                }
            }
            parm {
                name    "maxnodeprims"
                label   "Max Node Prims"
                type    integer
                default { "4" }
                help    "Maximum number of primitives to allow in a node in the tree. Once the primitives have been split to groups of this size or smaller, a leaf node is created."
                hidewhen "{ accelerator != bvh }"
                range   { 0 10 }
                parmtag { "autoscope" "0000000000000000" }
            }
            parm {
                name    "splitmethod"
                label   "Split Method"
                type    ordinal
                default { "sah" }
                help    "Method to use to partition the primitives when building the tree. The default, \"sah\", denotes the surface area heuristic; the default should almost certainly be used. The other options—\"middle\", which splits each node at its midpoint along the split axis, \"equal\", which splits the current group of primitives into two equal-sized sets, and \"hlbvh\", which selects the HLBVH algorithm, which parallelizes well—are slightly more efficient to evaluate at tree construction time, but lead to substantially lower-quality hierarchies."
                hidewhen "{ accelerator != bvh }"
                menu {
                    "sah"       "Surface Area Heuristic"
                    "middle"    "Midpoint"
                    "equal"     "Equal Sets"
                    "hlbvh"     "HLBVH"
                }
                parmtag { "autoscope" "0000000000000000" }
            }
            parm {
                name    "intersectcost"
                label   "Intersect Cost"
                type    integer
                default { "80" }
                help    "The value of the cost function that estimates the expected cost of performing a ray-object intersection, for use in building the kd-tree. "
                hidewhen "{ accelerator != kdtree }"
                range   { 0 10 }
                parmtag { "autoscope" "0000000000000000" }
            }
            parm {
                name    "traversalcost"
                label   "Traversal Cost"
                type    integer
                default { "1" }
                help    "Estimated cost for traversing a ray through a kd-tree node. "
                hidewhen "{ accelerator != kdtree }"
                range   { 0 10 }
                parmtag { "autoscope" "0000000000000000" }
            }
            parm {
                name    "emptybonus"
                label   "Empty Bonus"
                type    float
                default { "0.2" }
                help    "\"Bonus\" factor for kd-tree nodes that represent empty space. "
                hidewhen "{ accelerator != kdtree }"
                range   { 0 10 }
                parmtag { "autoscope" "0000000000000000" }
            }
            parm {
                name    "maxprims"
                label   "Max Prims"
                type    integer
                default { "1" }
                help    "Maximum number of primitives to store in kd-tree node. (Not a hard limit; more may be stored if the kd-tree can't find splitting planes that reduce the number of primitives when refining a node.) "
                hidewhen "{ accelerator != kdtree }"
                range   { 0 10 }
                parmtag { "autoscope" "0000000000000000" }
            }
            parm {
                name    "kdtree_maxdepth"
                label   "Max Depth"
                type    integer
                default { "-1" }
                help    "Maximum depth of the kd-tree. If negative, the kd-tree chooses a maximum depth based on the number of primitives to be stored in it. "
                hidewhen "{ accelerator != kdtree }"
                range   { 0 10 }
                parmtag { "autoscope" "0000000000000000" }
                parmtag { "pbrt.alias" "maxdepth" }
            }
        }

    }

    group {
        name    "folder0_1"
        label   "Objects"

        parm {
            name    "vobject"
            label   "Candidate Objects"
            type    oplist
            default { "*" }
            parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }
            parmtag { "oprelative" "/" }
        }
        parm {
            name    "forceobject"
            label   "Force Objects"
            type    oplist
            default { "" }
            parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }
            parmtag { "oprelative" "/" }
        }
        parm {
            name    "excludeobject"
            label   "Exclude Objects"
            type    oplist
            default { "" }
            parmtag { "oprelative" "/" }
        }
        parm {
            name    "sepparm"
            label   "Separator"
            type    separator
            default { "" }
        }
        parm {
            name    "sololight"
            label   "Solo Light"
            type    oplist
            default { "" }
            parmtag { "opfilter" "!!OBJ/LIGHT!!" }
            parmtag { "oprelative" "/" }
        }
        parm {
            name    "alights"
            label   "Candidate Lights"
            type    oplist
            default { "*" }
            disablewhen "{ sololight != \"\" }"
            parmtag { "opfilter" "!!OBJ/LIGHT!!" }
            parmtag { "oprelative" "/" }
        }
        parm {
            name    "forcelights"
            label   "Force Lights"
            type    oplist
            default { "" }
            disablewhen "{ sololight != \"\" }"
            parmtag { "oprelative" "/" }
        }
        parm {
            name    "excludelights"
            label   "Exclude Lights"
            type    oplist
            default { "" }
            disablewhen "{ sololight != \"\" }"
            parmtag { "opfilter" "!!OBJ/LIGHT!!" }
            parmtag { "oprelative" "/" }
        }
        parm {
            name    "soho_autoheadlight"
            label   "Headlight Creation"
            type    toggle
            default { "0" }
        }
    }

    group {
        name    "folder0_2"
        label   "Driver"

        parm {
            name    "soho_pipecmd"
            label   "soho pipecmd"
            type    string
            default { "pbrt" }
            disablewhen "{ soho_outputmode != 0 }"
        }
        parm {
            name    "soho_outputmode"
            label   "Save scene to disk"
            type    ordinal
            default { "0" }
            menu {
                "0" "Pipe to Cmd"
                "1" "Save To Disk"
                "2" "Stdout"
            }
        }
        parm {
            name    "soho_diskfile"
            label   "Disk File"
            type    file
            default { "$HIP/scene.pbrt" }
            disablewhen "{ soho_outputmode != 1 }"
            parmtag { "filechooser_mode" "write" }
        }
        parm {
            name    "soho_mkpath"
            label   "Create intermediate Directories"
            type    toggle
            default { "1" }
        }
        parm {
            name    "soho_viewport_menu"
            label   "Show In Viewport Menu"
            type    toggle
            default { "1" }
            help    "By default SOHO output drivers do not appear in the viewport menu.  Adding this property and turning it on will cause the driver to show up."
            parmtag { "spare_category" "Menu" }
        }
        parm {
            name    "soho_foreground"
            label   "Block Until Render Completes"
            type    toggle
            default { "0" }
            help    "When rendering to the soho_pipecmd, turning this on will block Houdini until the pipe command completes."
            disablewhen "{ soho_outputmode != 0 }"
            parmtag { "spare_category" "SOHO Intrinsics" }
        }
		parm {
			name    "soho_spoolrenderoutput"
			label   "Render Output"
			type    ordinal
			default { "off" }
			help    "Controls whether to capture the render output and add to the node info"
			menu {
				"off"   "Don't capture render output"
				"on"    "Capture render output for graphical apps"
				"force" "Capture render output for all apps"
			}
		}
        groupsimple {
            name    "soho_config"
            label   "Soho Config"

            parm {
                name    "soho_program"
                label   "soho program"
                type    file
                default { "PBRT.py" }
                parmtag { "filechooser_mode" "read" }
            }
            parm {
                name    "soho_shopstyle"
                label   "soho shop style"
                type    string
                default { "PBRT" }
            }
            parm {
                name    "soho_ipr_support"
                label   "soho ipr support"
                type    toggle
                default { "0" }
            }
            parm {
                name    "soho_previewsupport"
                label   "soho preview support"
                type    toggle
                default { "0" }
            }
        }

    }

    group {
        name    "folder0_3"
        label   "Scripts"

        parm {
            name    "tprerender"
            label   "tprerender"
            type    toggle
            nolabel
            joinnext
            default { "1" }
            help    "None"
        }
        parm {
            name    "prerender"
            label   "Pre-Render Script"
            type    file
            joinnext
            default { "" }
            help    "None"
            disablewhen "{ tprerender == 0 }"
            parmtag { "filechooser_mode" "read" }
        }
        parm {
            name    "lprerender"
            label   "lprerender"
            type    string
            nolabel
            default { "hscript" }
            help    "None"
            disablewhen "{ tprerender == 0 }"
            menu {
                "hscript"   "Hscript"
                "python"    "Python"
            }
        }
        parm {
            name    "tpreframe"
            label   "tpreframe"
            type    toggle
            nolabel
            joinnext
            default { "1" }
            help    "None"
        }
        parm {
            name    "preframe"
            label   "Pre-Frame Script"
            type    file
            joinnext
            default { "" }
            help    "None"
            disablewhen "{ tpreframe == 0 }"
            parmtag { "filechooser_mode" "read" }
        }
        parm {
            name    "lpreframe"
            label   "lpreframe"
            type    string
            nolabel
            default { "hscript" }
            help    "None"
            disablewhen "{ tpreframe == 0 }"
            menu {
                "hscript"   "Hscript"
                "python"    "Python"
            }
        }
        parm {
            name    "tpostframe"
            label   "tpostframe"
            type    toggle
            nolabel
            joinnext
            default { "1" }
            help    "None"
        }
        parm {
            name    "postframe"
            label   "Post-Frame Script"
            type    file
            joinnext
            default { "" }
            help    "None"
            disablewhen "{ tpostframe == 0 }"
            parmtag { "filechooser_mode" "read" }
        }
        parm {
            name    "lpostframe"
            label   "lpostframe"
            type    string
            nolabel
            default { "hscript" }
            help    "None"
            disablewhen "{ tpostframe == 0 }"
            menu {
                "hscript"   "Hscript"
                "python"    "Python"
            }
        }
        parm {
            name    "tpostrender"
            label   "tpostrender"
            type    toggle
            nolabel
            joinnext
            default { "1" }
            help    "None"
        }
        parm {
            name    "postrender"
            label   "Post-Render Script"
            type    file
            joinnext
            default { "" }
            help    "None"
            disablewhen "{ tpostrender == 0 }"
            parmtag { "filechooser_mode" "read" }
        }
        parm {
            name    "lpostrender"
            label   "lpostrender"
            type    string
            nolabel
            default { "hscript" }
            help    "None"
            disablewhen "{ tpostrender == 0 }"
            menu {
                "hscript"   "Hscript"
                "python"    "Python"
            }
        }
    }

}
